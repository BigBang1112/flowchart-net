@inject AppState AppState
@inject EventBroadcastService EventBroadcast

<menu>
    <h2 class="symbols">Symbols</h2>
    <MenuItem SymbolClass="symbol-terminal" Name="Start / End" OnMouseDown="SelectItem" IsSelected="@IsSelected("symbol-terminal")" />
    <MenuItem SymbolClass="symbol-flowline" Name="Flowline" IsNameVisible="false" OnMouseDown="SelectItem" IsSelected="@IsSelected("symbol-flowline")">
        <div class="line"></div>
        <div class="point"></div>
    </MenuItem>
    <MenuItem SymbolClass="symbol-process" Name="Process" OnMouseDown="SelectItem" IsSelected="@IsSelected("symbol-process")" />
    <MenuItem SymbolClass="symbol-io" Name="Input / Output" OnMouseDown="SelectItem" IsSelected="@IsSelected("symbol-io")">
        <div class="shape"></div>
    </MenuItem>
    <MenuItem SymbolClass="symbol-decision" Name="Decision" OnMouseDown="SelectItem" IsSelected="@IsSelected("symbol-decision")">
        <div class="shape"></div>
    </MenuItem>
</menu>

@code {
    private void SelectItem(string name) => AppState.SelectedSymbolId = name;

    private bool IsSelected(string identifier) => AppState.SelectedSymbolId == identifier;

    protected override Task OnInitializedAsync()
    {
        EventBroadcast.MenuUpdate += () => StateHasChanged();
        return base.OnInitializedAsync();
    }
}